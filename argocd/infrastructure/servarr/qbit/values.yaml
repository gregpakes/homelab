# servarr/qbit-vpn/values.yaml
controllers:
  main:
    replicas: 1
    pod:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    containers:
      gluetun:
        image:
          repository: qmcgaw/gluetun
          tag: latest
        env:
          TZ: Europe/London

          # --- AirVPN over WireGuard ---
          VPN_SERVICE_PROVIDER: airvpn
          VPN_TYPE: wireguard
          WIREGUARD_PRIVATE_KEY:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: WIREGUARD_PRIVATE_KEY } }
          WIREGUARD_PUBLIC_KEY:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: WIREGUARD_PUBLIC_KEY } }
          WIREGUARD_PRESHARED_KEY:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: WIREGUARD_PRESHARED_KEY } }
          WIREGUARD_ADDRESSES:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: WIREGUARD_ADDRESSES } }

          # Health & firewall
          FIREWALL: "on"
          HEALTH_TARGET_ADDRESS: "1.1.1.1:53"
          FIREWALL_VPN_INPUT_PORTS:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: FIREWALL_VPN_INPUT_PORTS } }

          # Allow LAN/cluster to reach WebUI on 8080
          FIREWALL_INPUT_PORTS: "8080"

          # let the pod talk to the cluster and NAS directly (no leak of Internet traffic)
          FIREWALL_OUTBOUND_SUBNETS: "10.42.0.0/16,10.43.0.0/16,172.16.51.0/24,172.16.250.191/32"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add: ["NET_ADMIN"]

      qbittorrent:
        image:
          repository: ghcr.io/linuxserver/qbittorrent
          tag: latest
        env:
          TZ: Europe/London
          PUID: "1000"
          PGID: "1000"
          WEBUI_PORT: "8080"
          # Set the listening peer port in qBittorrent config
          QBT_BitTorrent__Session__Port:
            valueFrom: { secretKeyRef: { name: gluetun-secrets, key: FIREWALL_VPN_INPUT_PORTS } }

        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: bt-tcp
            containerPort: 6881
            protocol: TCP
          - name: bt-udp
            containerPort: 6881
            protocol: UDP

        # readiness probe to qbittorrent waits for glutun to be healthy
        probes:
          readiness:
            enabled: true
            type: TCP
            port: 8080
          liveness:
            enabled: true
            type: TCP
            port: 8080

service:
  webui:
    controller: main
    type: ClusterIP
    ports:
      http:
        port: 8080
        targetPort: http
        protocol: TCP
  bittorrent:
    controller: main
    type: ClusterIP
    ports:
      tcp:
        port: 6881
        targetPort: bt-tcp
        protocol: TCP
      udp:
        port: 6881
        targetPort: bt-udp
        protocol: UDP

ingress:
  webui:
    enabled: true
    className: traefik
    hosts:
      - host: qbit.gregpakes.co.uk
        paths:
          - path: /
            service:
              identifier: webui
              port: http
    # tls: [...]   # optional

persistence:
  dev-tun:
    enabled: true
    type: hostPath
    hostPath: /dev/net/tun
    hostPathType: CharDevice

  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: longhorn

  downloads:
    enabled: true
    type: nfs
    server: 172.16.250.191
    path: /var/nfs/shared/Media

advancedMounts:
  main:
    gluetun:
      - name: dev-tun
        path: /dev/net/tun
    qbittorrent:
      - name: config
        path: /config
      - name: downloads
        path: /downloads